<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2017 by the Music Encoding Initiative (MEI).
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://www.tei-c.org/ns/1.0"
  xmlns:math="http://exslt.org/math"
  xmlns:mei="http://www.music-encoding.org/ns/mei">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Music Encoding Initiative Guidelines: <title type="sub">MEI Basic
            Customization</title></title>
        <respStmt>
          <resp>Authored by</resp>
          <name xml:id="PR">Perry Roland</name>
        </respStmt>
      </titleStmt>
      <publicationStmt>
        <p/>
      </publicationStmt>
      <sourceDesc>
        <p/>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change n="1" when="2017-04-01" who="#PR">
        <desc>Creation of the initial ODD.</desc>
      </change>
    </revisionDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
      <div xml:id="index" type="chapter">
        <head>Introduction</head>
        <p>
          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, 
        </p>
      </div>
      <div>
        <head>Basics</head>
        <div xml:id="events" type="chapter">
          <head>Notes, Chords and Rests</head>
          <p>
            In MEI, notes, chords and rests are often referred to as <soCalled>events</soCalled>. These events
            are the most basic and important part of MEI.
          </p>
          <div>
            <head>Notes</head>
            <p>
              This is how you encode a single note in MEI:
            </p>
            <eg>
              <notatedMusic>
                <ptr target="basic_note.mei"/>
                <desc type="xpath">//*:note</desc>
              </notatedMusic>
            </eg>
            <p>
              As you can see, the most relevant information is split into three different attributes for easier processing. 
              Every note requires to have a pitch name. The <att>pname</att> attribute may hold the following values: 
              <emph>c</emph>, <emph>d</emph>, <emph>e</emph>, <emph>f</emph>, <emph>g</emph>, <emph>a</emph>, <emph>b</emph>. 
            </p>
            <p>
              The second part of the information about pitch is stored in the <att>oct</att> attribute. Octaves are given 
              according to the Acoustical Society of America representation, which means the middle C on a piano will have 
              a value of <emph>4</emph>, the octave above will have a <emph>5</emph>, the one below a <emph>3</emph> and so on.
            </p>
            <p>
              Each note needs to have a duration being set. This is done with the <att>dur</att> attribute. Values are integers
              that match the note's duration, i.e. a quarter note will use a value of <emph>4</emph>, an eigth note will use 
              <emph>8</emph> and so forth. In case of a dotted note, the <emph>optional</emph> <att>dots</att> attribute is used
              to indicate the number of dots. 
            </p>
          </div>
          <div>
            <head>Chords</head>
            <p>
              In MEI Basic, chords strictly share a duration, that is, all notes need to have the same duration. Accordingly, 
              the <att>dur</att> (and <att>dots</att>, if necessary) attribute(s) are a property of the chord, but not the
              individual notes anymore.  
            </p>
            <eg>
              <notatedMusic>
                <ptr target="basic_chord.mei"/>
                <desc type="xpath">//*:chord</desc>
              </notatedMusic>
            </eg>
            <p>
              MEI Basic makes no assumption on the order of child notes in a chord – you can start either from the highest 
              or lowest pitch, or mix them as you like. 
            </p>
          </div>
          <div>
            <head>Rests</head>
            <p>
              The duration of rests is specified the same way as for notes or chords, that is, using <att>dur</att>, and, 
              if necessary, <att>dots</att>.
            </p>
            <eg>
              <notatedMusic>
                <ptr target="basic_rest.mei"/>
                <desc type="xpath">//*:rest</desc>
              </notatedMusic>
            </eg>
            <p>
              Do I need to say more?
            </p>
          </div>
        </div>
        <div xml:id="controlEvents" type="chapter">
          <head>Slurs, Dynamics and other "Control Events"</head>
          <p>
            With <soCalled>events</soCalled>, MEI encodes the individual notes etc. that compose a score. However, 
            music notation has various "features" that tell us something about those notes, that control how we
            need to understand them. Those features are called <soCalled>control events</soCalled> in MEI. 
          </p>
          <div>
            <head>Slurs and Ties</head>
            <p>
              One of the most prominent and frequently used control events in 18th and 19th century music are 
              slurs. They are encoded as follows:  
            </p>
            <eg>
              <notatedMusic>
                <ptr target="basic_slur1.mei"/>
                <desc type="xpath">//*:measure[1]/*:slur</desc>
              </notatedMusic>
            </eg>
            <p>
              This example introduces quite a number of important concepts. Let's have a close look: The <att>staff</att>
              attribute attaches the slur to a specific staff in the score. The assignment to specific notes is dones
              through the <att>startid</att> and <att>endid</att> attributes. Both attributes use a specific datatype
              called <soCalled>anyURI</soCalled>, so it's basically a URI as you use your internet browser to point to a 
              specific webpage. What we see over here is a <soCalled>fragment identifier</soCalled>, as we can see from the 
              trailing hash symbol (#). The text following this hash refers to an <soCalled>xml:id</soCalled> of an element
              in the same file. This means we have to look at the encoding of the notes of our example: 
            </p>
            <eg>
              <notatedMusic>
                <ptr target="basic_slur1.mei"/>
                <desc type="xpath">//*:measure[1]//*:note</desc>
              </notatedMusic>
            </eg>
            <p>
              As we can see there, our notes have an additional attribute <att>xml:id</att>. This attribute is actually
              allowed on every element in MEI. The value must conform to the rules of XML IDs, which basically
              allows most common ASCII characters, but requires to start with a letter. However, the most important thing 
              about XML IDs is that they need to be unique within a file, that is, there must not be any other element 
              with the same value for <att>xml:id</att> in the file. Only by this limitation, XML IDs can serve their purpose,
              that is, inambiguously identify elements within a file. As a side note, even though
              we used "note1" and "note2" as XML IDs for this example, we don't actually recommend to use so-called
              <soCalled>predictable IDs</soCalled>, that is, XML IDs which can be guessed by their position in the 
              file. As soon as you start to apply modifications to your file, it's quite likely that this will require
              you to change your IDs, and that this endeavor will lead to inconsistency and problems – believe us, we've 
              been through this. 
            </p>
            <p>
              Now that we understand the mechanism of <att>xml:id</att> and <soCalled>anyURI</soCalled>, what does it mean?
              It attaches the two ends of the slur firmly to the notes referenced (just for the record: chords can be equally
              well referenced). This means that when you change your encoding by adding or deleting notes, moving things around
              etc., the slur will stay attached to that note, no matter what.  
            </p>
            <p>
              Sometimes, however, you don't want to attach a <soCalled>control event</soCalled> like a slur to a specific note. 
            </p>
          </div>
          <div>
            <head>Dynamics of all kinds</head>
            <p>
              
            </p>
          </div>
          <div>
            <head>Other controlEvents</head>
            <p>
              
            </p>
          </div>
        </div>
        <div xml:id="artic" type="chapter">
          <head>Articulations</head>
        </div>
      </div>
      <div>
        <head>Score Organization</head>
        <div xml:id="scoreDef" type="chapter">
          <head>Definition of Score Setup</head>
        </div>
        <div xml:id="layers" type="chapter">
          <head>Layers and Spaces</head>
        </div>
        <div xml:id="repetition" type="chapter">
          <head>Repetition and Endings</head>
        </div>
      </div>
      <div xml:id="metadata" type="chapter">
        <head>Metadata</head>
      </div>
      <div xml:id="interactive" type="chapter">
        <head>Interactive Example</head>
      </div>
    </front>
    <!-- This file creates a subset of mei-all. -->
    <body>
      <schemaSpec ident="mei" ns="http://www.music-encoding.org/ns/mei" prefix="mei_" start="mei">

        <!-- Declare MEI and XLink namespaces for use in Schematron -->
        <constraintSpec ident="set_ns" scheme="isoschematron" mode="add">
          <constraint>
            <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei"
              uri="http://www.music-encoding.org/ns/mei"/>
            <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="xlink"
              uri="http://www.w3.org/1999/xlink"/>
          </constraint>
        </constraintSpec>

        <!-- Disallow some modules -->
        <moduleRef key="MEI"/>
        <!--<moduleRef key="MEI.analytical"/>-->
        <moduleRef key="MEI.cmn"/>
        <moduleRef key="MEI.cmnOrnaments"/>
        <!--<moduleRef key="MEI.corpus"/>-->
        <!--<moduleRef key="MEI.critapp"/>-->
        <!--<moduleRef key="MEI.drama"/>-->
        <!--<moduleRef key="MEI.edittrans"/>-->
        <moduleRef key="MEI.externalsymbols"/>
        <!--<moduleRef key="MEI.facsimile"/>-->
        <!--<moduleRef key="MEI.figtable"/>-->
        <!--<moduleRef key="MEI.fingering"/>-->
        <!--<moduleRef key="MEI.frbr"/>-->
        <!--<moduleRef key="MEI.gestural"/>-->
        <!--<moduleRef key="MEI.harmony"/>-->
        <moduleRef key="MEI.header"/>
        <moduleRef key="MEI.lyrics"/>
        <!--<moduleRef key="MEI.mensural"/>-->
        <!--<moduleRef key="MEI.midi"/>-->
        <!--<moduleRef key="MEI.namesdates"/>-->
        <!--<moduleRef key="MEI.neumes"/>-->
        <!--<moduleRef key="MEI.performance"/>-->
        <moduleRef key="MEI.ptrref"/>
        <moduleRef key="MEI.shared"/>
        <!--<moduleRef key="MEI.tablature"/>-->
        <!--<moduleRef key="MEI.text"/>-->
        <!--<moduleRef key="MEI.usersymbols"/>-->
        <!--<moduleRef key="MEI.visual"/>-->

        <!-- Include SVG -->
        <!--<moduleRef url="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/svg11.rng"
          prefix="svg_">
          <content>
            <rng:define name="mei_model.graphicLike" combine="choice">
              <rng:ref name="svg_svg"/>
            </rng:define>
          </content>
        </moduleRef>-->

        <!-- ******************************************************************** -->
        <!-- CONFORMING CHANGES -->

        <!-- Disallow <annot> as a control event -->
        <classSpec ident="model.annotLike" module="MEI.shared" type="model" mode="replace">
          <desc>Groups annotation-like elements.</desc>
          <classes>
            <!--<memberOf key="model.controlEventLike"/>-->
            <memberOf key="model.textPhraseLike.limited"/>
          </classes>
        </classSpec>
        <!-- Disallow keySig as an event -->
        <classSpec ident="model.keySigLike" module="MEI.shared" type="model" mode="replace">
          <desc>Groups elements that have the same function as a key signature.</desc>
          <classes>
            <!--<memberOf key="model.eventLike"/>-->
            <memberOf key="model.staffDefPart"/>
          </classes>
        </classSpec>
        <!-- Disallow meterSig as an event -->
        <classSpec ident="model.meterSigLike" module="MEI.shared" type="model" mode="replace">
          <desc>Groups elements that represent a meter signature.</desc>
          <classes>
            <!--<memberOf key="model.eventLike"/>-->
            <memberOf key="model.staffDefPart"/>
          </classes>
        </classSpec>
        <!-- Disallow scoreDef as an event -->
        <classSpec ident="model.scoreDefLike" module="MEI.shared" type="model" mode="replace">
          <desc>Groups elements that provide score meta-information.</desc>
          <classes>
            <memberOf key="model.scorePart"/>
            <memberOf key="model.sectionPart"/>
            <!--<memberOf key="model.staffPart.mensuralAndNeumes"/>
            <memberOf key="model.layerPart.mensuralAndNeumes"/>-->
          </classes>
        </classSpec>

        <!-- Remove respStmt from model.respLike -->
        <elementSpec ident="respStmt" module="MEI.shared" mode="replace">
          <desc>(responsibility statement) – Names one or more individuals, groups, or in rare
            cases, mechanical processes, responsible for creation, realization, production, or
            distribution of the intellectual or artistic content, where the specialized elements for
            authors, editors, etc. do not suffice or do not apply.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="model.pubStmtPart"/>
            <!--<memberOf key="model.respLike"/>-->
          </classes>
          <content>
            <rng:choice>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:ref name="name"/>
                  <rng:ref name="resp"/>
                  <rng:ref name="model.nameLike.agent"/>
                </rng:choice>
              </rng:zeroOrMore>
            </rng:choice>
          </content>
          <constraintSpec ident="check_respStmt" scheme="isoschematron">
            <constraint>
              <sch:rule
                context="mei:*[local-name()='titleStmt' or local-name()='pubStmt' or 
                local-name()='seriesStmt']/mei:respStmt[mei:corpName or mei:name or mei:persName]">
                <sch:assert role="warning" test="mei:resp or (count(mei:*[@role]) = count(mei:*))"
                  >If at least one resp element isn't present, all name-like elements should have a
                  @role attribute.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <remarks>
            <p>This element is modelled on an element in the Text Encoding Initiative (TEI)
              standard.</p>
          </remarks>
        </elementSpec>

        <!-- Remove elements -->
        <elementSpec ident="ambitus" module="MEI.shared" mode="delete"/>
        <elementSpec ident="arpeg" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="barLine" module="MEI.shared" mode="delete"/>
        <elementSpec ident="beamSpan" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="beatRpt" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="bend" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="breath" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="bTrem" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="caesura" module="MEI.shared" mode="delete"/>
        <elementSpec ident="clefGrp" module="MEI.shared" mode="delete"/>
        <elementSpec ident="custos" module="MEI.shared" mode="delete"/>
        <elementSpec ident="div" module="MEI.shared" mode="delete"/>
        <elementSpec ident="gliss" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="grpSym" module="MEI.shared" mode="delete"/>
        <elementSpec ident="halfmRpt" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="harpPedal" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="ligatureSpan" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="lv" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="mRpt" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="mRpt2" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="multiRest" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="multiRpt" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="ornam" module="MEI.shared" mode="delete"/>
        <elementSpec ident="ossia" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="pad" module="MEI.shared" mode="delete"/>
        <elementSpec ident="part" module="MEI.shared" mode="delete"/>
        <elementSpec ident="parts" module="MEI.shared" mode="delete"/>
        <elementSpec ident="pedal" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="phrase" module="MEI.shared" mode="delete"/>
        <elementSpec ident="reh" module="MEI.cmn" mode="delete"/>
        <elementSpec ident="relation" module="MEI.shared" mode="delete"/>
        <elementSpec ident="relationList" module="MEI.shared" mode="delete"/>
        <elementSpec ident="tupletSpan" module="MEI.cmn" mode="delete"/>

        <!-- Restrict content of body -->
        <!-- Allow only a single mdiv -->
        <elementSpec ident="body" module="MEI.shared" mode="replace">
          <desc>Contains the whole of a single musical text, excluding any front or back
            matter.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.metadataPointing"/>
            <memberOf key="model.musicPart"/>
          </classes>
          <content>
            <!--<rng:oneOrMore>-->
            <rng:ref name="model.mdivLike"/>
            <!--</rng:oneOrMore>-->
          </content>
          <remarks>
            <p>When the music can be broken into high-level, discrete, linear segments, such as
              movements of a symphony, there may be multiple <gi scheme="MEI">mdiv</gi> elements
              within <gi scheme="MEI">body</gi>. This is the highest level indication of the
              structure of the music.</p>
          </remarks>
        </elementSpec>

        <!-- Disallow self-nesting of mdiv -->
        <elementSpec ident="mdiv" module="MEI.shared" mode="replace">
          <desc>(musical division) – Contains a subdivision of the body of a musical text.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.metadataPointing"/>
            <memberOf key="model.mdivLike"/>
          </classes>
          <content>
            <rng:choice>
              <rng:group>
                <rng:optional>
                  <rng:ref name="model.scoreLike"/>
                </rng:optional>
                <rng:optional>
                  <rng:ref name="model.partsLike"/>
                </rng:optional>
              </rng:group>
              <!--<rng:zeroOrMore>
                <rng:ref name="model.mdivLike"/>
              </rng:zeroOrMore>-->
            </rng:choice>
          </content>
          <remarks>
            <p>The <gi scheme="MEI">mdiv</gi> element may contain one or both of 2 possible views of
              the music. The score view is the traditional full and open score while the parts view
              contains each performer's view of the score; that is, his part. These 2 views are
              necessary because it is not always possible or desirable to generate one from the
              other. The <gi scheme="MEI">score</gi> and <gi scheme="MEI">parts</gi> elements are
              placed here and not directly within the <gi scheme="MEI">body</gi> element because
              score and part characteristics may change from <gi scheme="MEI">mdiv</gi> to <gi
                scheme="MEI">mdiv</gi>. For example, the 2nd movement of a symphony may require
              different performing forces (and therefore different score and part layout) than the
              other movements. The <gi scheme="MEI">mdiv</gi> element may be recursively nested in
              order to represent music which exhibits this kind of structure. For example, an opera
              is normally divided into acts, which are in turn divided into scenes.</p>
          </remarks>
        </elementSpec>

        <!-- Disable mensural- and neume-specific model classes in the shared module -->
        <classSpec ident="model.scorePart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.sectionPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.staffPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.layerPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>


        <!-- ******************************************************************** -->
        <!-- NON-CONFORMING CHANGES -->


        <!-- ******************************************************************** -->
        <!-- CHANGES CARRIED OVER FROM latest_DEV.odd -->




      </schemaSpec>
    </body>
  </text>
</TEI>
